// <auto-generated />
using System;
using EFCore_Project_ITI.Config;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCore_Project_ITI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("EFCore_Project_ITI.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Departments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "HR"
                        },
                        new
                        {
                            Id = 2,
                            Name = "IT"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Finance"
                        });
                });

            modelBuilder.Entity("EFCore_Project_ITI.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("F_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("L_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            F_Name = "Ahmed",
                            L_Name = "Ali"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            F_Name = "Sara",
                            L_Name = "Hassan"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 2,
                            F_Name = "Omar",
                            L_Name = "Khaled"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 3,
                            F_Name = "Mona",
                            L_Name = "Ibrahim"
                        });
                });

            modelBuilder.Entity("EFCore_Project_ITI.Models.Employee_Project", b =>
                {
                    b.Property<int>("Employee_Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Project_Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Employee_Id", "Project_Id");

                    b.HasIndex("Project_Id");

                    b.ToTable("Employee_Projects", (string)null);

                    b.HasData(
                        new
                        {
                            Employee_Id = 1,
                            Project_Id = 3
                        },
                        new
                        {
                            Employee_Id = 2,
                            Project_Id = 2
                        },
                        new
                        {
                            Employee_Id = 3,
                            Project_Id = 1
                        },
                        new
                        {
                            Employee_Id = 4,
                            Project_Id = 1
                        },
                        new
                        {
                            Employee_Id = 4,
                            Project_Id = 3
                        });
                });

            modelBuilder.Entity("EFCore_Project_ITI.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("DATE('now', '+1 year')");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.ToTable("Projects", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Payroll System",
                            StartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "E-Commerce Website",
                            StartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Recruitment App",
                            StartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("EFCore_Project_ITI.Models.Employee", b =>
                {
                    b.HasOne("EFCore_Project_ITI.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EFCore_Project_ITI.Models.Employee_Project", b =>
                {
                    b.HasOne("EFCore_Project_ITI.Models.Employee", "Employee")
                        .WithMany("Employee_Projects")
                        .HasForeignKey("Employee_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCore_Project_ITI.Models.Project", "Project")
                        .WithMany("Employee_Projects")
                        .HasForeignKey("Project_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EFCore_Project_ITI.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EFCore_Project_ITI.Models.Employee", b =>
                {
                    b.Navigation("Employee_Projects");
                });

            modelBuilder.Entity("EFCore_Project_ITI.Models.Project", b =>
                {
                    b.Navigation("Employee_Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
